{"name":"Julienbe.GitHub.io","tagline":"Cheat sheet","body":"# Bloom filter\r\n\r\nA Bloom filter is a data structure designed to tell you, rapidly and **memory-efficiently**, whether an element is present in a set. \r\n\r\n## It looks like this :\r\n\r\n| 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 \r\n|---|---|---|---|---|---|---|---|---|---\r\n|   |   |   |   |   |   |   |   |   |   \r\n\r\n## Add\r\n\r\nWhen you enter something in the set, it goes trough multiples **hash functions**. Each function will turn a cell of the array on. So if you add multiples elements they might eventually end up turning on cells that are already turned on.\r\n\r\n* element -> hash1() -> cell x\r\n* element -> hash2() -> cell y\r\n* element -> hash3() -> cell z\r\n\r\n## Get\r\n\r\nThe element you're trying to get will go trough the same hash functions, this will tell you which cells to look for. If one of those is off, the element cannot be there. If all are on, there is a fairly good chance that it has already been added.\r\n\r\nYou may have **false positives** but **no false negative**.\r\n\r\n\r\n\r\n\r\n","google":"UA-51057524-6","note":"Don't delete this file! It's used internally to help with page regeneration."}